package task1.tests.echo;

public class EchoTest {
    public static void main(String[] args) {
        // Lancer le serveur Echo dans un thread séparé
        Broker serverBroker = new BrokerImpl("ServerBroker");
        EchoServer server = new EchoServer(serverBroker, () -> {
            try {
                while (true) {
                    Channel channel = serverBroker.accept(12345);
                    byte[] buffer = new byte[256];
                    int bytesRead;
                    while ((bytesRead = channel.read(buffer, 0, buffer.length)) != -1) {
                        channel.write(buffer, 0, bytesRead); // Echo
                    }
                    channel.disconnect();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
        server.start(); // Démarrage du serveur

        // Lancer plusieurs clients dans des threads séparés
        for (int i = 0; i < 5; i++) {
            Broker clientBroker = new BrokerImpl("ClientBroker" + i);
            EchoClient client = new EchoClient(clientBroker, () -> {
                try {
                    Channel channel = clientBroker.connect("ServerBroker", 12345);
                    byte[] sequence = new byte[255];
                    for (int j = 0; j < 255; j++) {
                        sequence[j] = (byte) (j + 1);
                    }
                    channel.write(sequence, 0, sequence.length);
                    byte[] echo = new byte[255];
                    int bytesRead = channel.read(echo, 0, echo.length);
                    for (int j = 0; j < bytesRead; j++) {
                        if (echo[j] != sequence[j]) {
                            System.out.println("Erreur d'echo à l'octet : " + j);
                        }
                    }
                    channel.disconnect();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            });
            client.start(); // Démarrage du client
        }
    }
}
